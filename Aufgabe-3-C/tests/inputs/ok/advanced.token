Line:   1, Token:  "int"
Line:   1, IDENT:  <fibonacci>
Line:   1, Token:  '('
Line:   1, Token:  "int"
Line:   1, IDENT:  <n>
Line:   1, Token:  ')'
Line:   1, Token:  '{'
Line:   2, Token:  "if"
Line:   2, Token:  '('
Line:   2, IDENT:  <n>
Line:   2, Token:  "<="
Line:   2, INT:    <1>
Line:   2, Token:  ')'
Line:   3, Token:  "return"
Line:   3, IDENT:  <n>
Line:   3, Token:  ';'
Line:   5, Token:  "return"
Line:   5, IDENT:  <fibonacci>
Line:   5, Token:  '('
Line:   5, IDENT:  <n>
Line:   5, Token:  "-"
Line:   5, INT:    <1>
Line:   5, Token:  ')'
Line:   5, Token:  "+"
Line:   5, IDENT:  <fibonacci>
Line:   5, Token:  '('
Line:   5, IDENT:  <n>
Line:   5, Token:  "-"
Line:   5, INT:    <2>
Line:   5, Token:  ')'
Line:   5, Token:  ';'
Line:   6, Token:  '}'
Line:   8, Token:  "void"
Line:   8, IDENT:  <main>
Line:   8, Token:  '('
Line:   8, Token:  ')'
Line:   8, Token:  '{'
Line:   9, Token:  "for"
Line:   9, Token:  '('
Line:   9, Token:  "int"
Line:   9, IDENT:  <n>
Line:   9, Token:  "="
Line:   9, INT:    <1>
Line:   9, Token:  ';'
Line:   9, IDENT:  <n>
Line:   9, Token:  "<"
Line:   9, INT:    <30>
Line:   9, Token:  ';'
Line:   9, IDENT:  <n>
Line:   9, Token:  "="
Line:   9, IDENT:  <n>
Line:   9, Token:  "+"
Line:   9, INT:    <1>
Line:   9, Token:  ')'
Line:  10, Token:  "print"
Line:  10, Token:  '('
Line:  10, IDENT:  <fibonacci>
Line:  10, Token:  '('
Line:  10, IDENT:  <n>
Line:  10, Token:  ')'
Line:  10, Token:  ')'
Line:  10, Token:  ';'
Line:  11, Token:  '}'
